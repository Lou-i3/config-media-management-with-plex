{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hi there!  Find in the wiki the details of my config for media management with Plex. </p> <p>You can start by visiting the general presentation page to get the general idea of how the setup is working. </p>"},{"location":"#detailed-configuration-of-each-tool","title":"Detailed configuration of each tool","text":"<p>In this wiki, you\u2019ll find the different articles listed bellow: </p> <ul> <li>General Presentation</li> <li>Plex</li> <li>Servarr containers</li> <li>Jackett</li> <li>Transmission with Open VPN</li> <li>Overseer (?) </li> </ul>"},{"location":"general-presentation/","title":"General Presentation","text":"<p>My setup is made of different types of tools.  Each are presented bellow. </p>"},{"location":"general-presentation/#automatic-finders","title":"Automatic Finders","text":"<p>Automatic finders are tools which can automatically find torrent files for movies and series.  You initiate a search on these tools, they find a downloadable file from index managers (bellow) and send a request to your download utility.  Once the file is downloaded, the tool will move the file to your media location and name it properly. </p> <ul> <li> Radarr Movie download utility</li> <li> Sonarr TV Shows download utility</li> </ul>"},{"location":"general-presentation/#index-managers","title":"Index Managers","text":"<p>Index managers allow referencing various torrent providers.  They are used by automatic finders to send requests to all configured providers easily. </p> <ul> <li> Jackett Indexer manager for automatic download utilities</li> <li> Prowlarr Indexer manager for automatic download utilities</li> </ul>"},{"location":"general-presentation/#other","title":"Other","text":"<p>Other types of tools are used in the setup. </p> <ul> <li> Transmission Download utility</li> <li> Bazarr Subtitles manager</li> <li> Overseerr Request manager</li> <li> FlareSolverr Cloudflare bypass</li> </ul>"},{"location":"general-presentation/#global-setup","title":"Global setup","text":"<p>For now, the whole system rests on a synology NAS. </p>"},{"location":"general-presentation/#server-specs","title":"Server Specs","text":"<ul> <li>Synology NAS DS920+</li> <li>2x 8Go RAM Modules</li> <li>4x 8To Seagate IronWolf </li> </ul>"},{"location":"general-presentation/#architecture","title":"Architecture","text":"<ul> <li>Plex from Synology Package </li> <li>Docker from Synology Package </li> <li>Other Tools as Docker Containers </li> <li>Nginx Proxy Manager for proxy </li> </ul>"},{"location":"roadmap/","title":"Roadmap","text":"<ul> <li> Add a section for each tool</li> <li> Write global setup</li> <li> Write the roadmap  </li> </ul>"},{"location":"roadmap/#init","title":"init","text":"<ul> <li> Init the project</li> </ul>"},{"location":"servarr-containers/","title":"Servarr Containers","text":"<p>Radarr, Sonarr, Bazarr, Prowlarr and FlareSolverr are tools collectively refered to as \u201cArr\u201d or \u201cArrs\u201d.  They are maintained under the Github organization Servarr. </p> <p>As they are all maintained by the same team, the process for installation is very similar. </p>"},{"location":"servarr-containers/#general-idea","title":"General Idea","text":""},{"location":"servarr-containers/#docker-deployment","title":"Docker deployment","text":""},{"location":"servarr-containers/#deploy-with-docker-compose","title":"Deploy with docker-compose","text":"<pre><code>version: \"3.9\"  services:\nbazarr: # Bazarr\nimage: [image] # (1)!\ncontainer_name: [Your-Container-Name] # (2)!\nports:\n- \"[out-port]:[app-port]\"  # (3)!\nvolumes: # (4)!\n# Examples: \n- \"/volume1/Medias Lib/Movies:/movies\"\n- \"/volume1/Medias Lib/TV Shows:/tv\"\n- \"/volume1/docker/bazarr:/config\"\nenvironment: PUID: 1026 # (5)!\nGUID: 100\nHOME: /root\nLANG: en_US.UTF-8\nLANGUAGE: en_US.UTF-8\nPATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nPS1: $$(whoami)@$$(hostname):$$(pwd)\\$$\nS6_CMD_WAIT_FOR_SERVICES_MAXTIME: 0\nTERM: xterm\nTZ: Europe/Paris\nXDG_CONFIG_HOME: /config/xdg\nnetwork_mode: bridge\n</code></pre> <ol> <li> Enter here the name of the image you need     Find bellow the different available images!  </li> <li> Enter here the name you want for your container   No spaces!  </li> <li> Enter the port mappings On the left the port your container will have on your server  On the right the port the app inside the container is using     </li> <li> Here are examples of volumes mappings     Find bellow which volume are needed for your image!  </li> <li> You need to map user credentials with your account      In ssh console type in <code>id</code> and get the values for PUID and GUID </li> </ol>"},{"location":"servarr-containers/#docker-images-volume-mappings","title":"Docker Images &amp; Volume Mappings","text":"<p>Find here a list of all the Docker images: </p> <ul> <li>Radarr: linuxserver/radarr <p>Required mappings:  </p> <ul> <li><code>/path/to/data:/config</code></li> <li><code>/path/to/movies:/movies</code> #optional  </li> <li><code>/path/to/downloadclient-downloads:/downloads</code> #optional  </li> </ul> </li> <li>Sonarr </li> </ul>"},{"location":"servarr-containers/#app-configuration","title":"App configuration","text":""},{"location":"servarr-containers/#global","title":"Global","text":""},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"transmission/","title":"Transmission","text":"<p>For my setup, I deployed Transmission torrent downloader with a connection going through a VPN with NORD VPN. </p> <p>The setup used is from Haugene Transmission OpenVPN repo. The docker Image. </p>"},{"location":"transmission/#docker-compose","title":"Docker Compose","text":"<pre><code>version: '3.3'\nservices:\ntransmission:\nimage: haugene/transmission-openvpn:latest\ncontainer_name: Transmission-OpenVPN # (1)!\nrestart: unless-stopped\ncap_add:\n- NET_ADMIN\nports:\n- 30001:9091  # (2)! \n- 8888:8888 # web-proxy\nenvironment:\nLOCAL_NETWORK: 192.168.1.0/24\nOPENVPN_CONFIG: de15.nordvpn.com # (3)! \nOPENVPN_USERNAME: # (4)! \nOPENVPN_PASSWORD: # (5)! \nOPENVPN_PROVIDER: NORDVPN # PIA or etc # (6)! \nCREATE_TUN_DEVICE: true\nTRANSMISSION_WEB_UI: flood-for-transmission # (7)! \nTZ: Europe/Paris\n# (8)! \nTRANSMISSION_DOWNLOAD_DIR: /data/Data TRANSMISSION_HOME: /data/transmission-home\nTRANSMISSION_INCOMPLETE_DIR: /data/Incomplete\nTRANSMISSION_WATCH_DIR: /data/TorrentFiles\nvolumes: # (9)! \n- /volume1/docker/transmission-openvpn/resolv.conf:/etc/resolv.conf:ro # use to stop dns-leak\n- /volume1/Downloads:/data\n- /volume1/docker/transmission-openvpn:/config\nnetwork_mode: bridge\n</code></pre> <ol> <li> Enter here the name you want for your container   No spaces!  </li> <li> Transmission web UI port is 9091     It is here mapped to 30001     Use http://nas-ip:30001 to access ui from local network  </li> <li>Name of the opvn config file for VPN connexion      File must be uploaded at: <code>/volume1/Docker/transmission-openvpn</code>     If the file name is <code>de15.nordvpn.com.ovpn</code> use <code>de15.nordvpn.com</code> </li> <li>Enter your username</li> <li>Enter your password</li> <li>See documentation page</li> <li> <p>Choose your UI     Your options are:  </p> <ul> <li>Combustion UI  </li> <li>Kettu  </li> <li>Transmission-Web-Control  </li> <li>Flood for Transmission  </li> <li>Shift  </li> </ul> <p>Write the name replacing spaces with \u201c-\u201c.   </p> </li> <li> <p>Set the folder mappings  </p> </li> <li>Map your volumes     You need at least two:  <ul> <li>/data  </li> <li>/config  </li> </ul> </li> </ol>"},{"location":"use-docker-compose/","title":"Use Docker Compose","text":"<p>Learn how to use Docker Compose with DSM 7 </p> <p>Coming soon\u2026 </p>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"}]}